@import './_variables';

.grid {
  margin: $gridMarginTop auto $gridMarginBottom;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 1px 2px 0 rgba(60, 64, 67, 0.3),
    0 1px 3px 1px rgba(60, 64, 67, 0.15);
  max-height: $gridHeight;
  max-width: $max-content-width;

  div.gridHeader {
    display: grid;
    height: $gridHeaderHeight + 2px;
    grid-template-columns: repeat(12, 1fr [col-start]) 40px;
    min-height: 0;
    min-width: 0; /* needed for Firefox */

    div.gridHeaderCell {
      box-sizing: border-box;
      padding: 6px 6px;
      overflow: hidden;
      text-overflow: ellipsis;
      background-color: $grid-frame-color;
      background-image: linear-gradient(
        to top,
        rgba(255, 255, 255, 0.3),
        rgba(255, 255, 255, 0)
      );
      min-width: 0; /* NEW; needed for Firefox */
    }

    div.refreshButton {
      background-color: $grid-frame-color;
      display: block;
      color: darken($grid-frame-color, 10%);

      &:hover {
        color: darken($grid-frame-color, 20%);
      }

      svg {
        width: 20px;
        height: 20px;
        margin: 6px 0 0 4px;
      }
      svg.rotate {
        animation: rotation 2s infinite linear;
        color: darken($grid-frame-color, 20%);
      }
    }
  }

  div.gridFooter {
    height: $gridFooterHeight;
    background-color: $grid-frame-color;
    background-image: linear-gradient(
      to bottom,
      rgba(255, 255, 255, 0.3),
      rgba(255, 255, 255, 0)
    );
  }

  div.gridBody {
    height: $gridBodyHeight;
    display: flex;
    flex-direction: column;
    overflow: hidden;

    div.card {
      display: block;
      background-color: $grid-frame-color;
      background-image: linear-gradient(
        to bottom,
        rgba(255, 255, 255, 0),
        rgba(255, 255, 255, 0.6)
      );
      position: relative;

      // Card close icon
      div.close {
        position: absolute;
        top: 0.5em;
        right: 0.5em;
        width: 24px;
        height: 24px;
        color: darken($grid-frame-color, 10%);

        &:hover {
          color: darken($grid-frame-color, 20%);
        }
      }
    }

    div.cardOpen {
      height: 300px;
      transition: all 400ms;
    }

    div.cardClosed {
      transition: all 400ms;
      height: 0px;
    }

    div.gridDataWrap {
      height: $gridBodyHeight;
      display: block;
      flex: auto;
      overflow-y: scroll;
      transition: all 400ms;

      div.gridData {
        display: grid;
        grid-template-columns: repeat(12, 1fr [col-start]) 20px;
        overflow: hidden;

        div.gridDataCell {
          background-color: #fff;
          padding: 6px 6px;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }

        @mixin stripeRowsOdd {
          @for $i from 1 through $columns + 1 {
            $columnsX2: ($columns + 1) * 2; // add 1 for action column
            div:nth-child(#{$columnsX2}n + #{$i}) {
              background-color: #fafafa;
            }
          }
        }

        @mixin stripeRowsEven {
          @for $i from 1 through $columns + 1 {
            $increment: $columns + $i + 1;
            $columnsX2: ($columns + 1) * 2; // add 1 for action column
            div:nth-child(#{$columnsX2}n + #{$increment}) {
              background-color: #fafafa;
            }
          }
        }

        @include stripeRowsEven;

        div.colSelected {
          background-color: #c2daf0;
        }
      }
    }
    div.gridDataWrapShrink {
      //height: calc(#{$gridBodyHeight} / 2);
      transition: all 400ms;
    }
  }

  .colStart1 {
    grid-column-start: 1;
  }
  .colStart2 {
    grid-column-start: 2;
  }
  .colStart3 {
    grid-column-start: 3;
  }
  .colStart4 {
    grid-column-start: 4;
  }
  .colStart5 {
    grid-column-start: 5;
  }
  .colStart6 {
    grid-column-start: 6;
  }
  .colStart7 {
    grid-column-start: 7;
  }
  .colStart8 {
    grid-column-start: 8;
  }
  .colStart9 {
    grid-column-start: 9;
  }
  .colStart10 {
    grid-column-start: 10;
  }
  .colStart11 {
    grid-column-start: 11;
  }

  .colSpan1 {
    grid-column-end: span 1;
  }
  .colSpan2 {
    grid-column-end: span 2;
  }
  .colSpan3 {
    grid-column-end: span 3;
  }
  .colSpan4 {
    grid-column-end: span 4;
  }
  .colSpan5 {
    grid-column-end: span 5;
  }
  .colSpan6 {
    grid-column-end: span 6;
  }
  .colSpan7 {
    grid-column-end: span 7;
  }
  .colSpan8 {
    grid-column-end: span 8;
  }
  .colSpan9 {
    grid-column-end: span 9;
  }
  .colSpan10 {
    grid-column-end: span 10;
  }
  .colSpan11 {
    grid-column-end: span 11;
  }
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}
